import Physer


class Example(Physer.State):

    def preload(self):
        self.game.load.tilemap('level1', 'assets/games/starstruck/level1.json',
                               None, Physer.Tilemap.TILED_JSON)
        self.game.load.image('tiles-1', 'assets/games/starstruck/tiles-1.png')
        self.game.load.spritesheet('dude', 'assets/games/starstruck/dude.png',
                                   32, 48)
        self.game.load.spritesheet('droid',
                                   'assets/games/starstruck/droid.png',
                                   32, 32)
        self.game.load.image('starSmall', 'assets/games/starstruck/star.png')
        self.game.load.image('starBig', 'assets/games/starstruck/star2.png')
        self.game.load.image('background',
                             'assets/games/starstruck/background2.png')

    def create(self):

        self.facing = 'left'
        self.jumpTimer = 0
        self.game.physics.startSystem(Physer.Physics.ARCADE)

        self.game.stage.backgroundColor = '#000000'

        self.bg = self.game.add.tileSprite(0, 0, 800, 600, 'background')
        self.bg.fixedToCamera = True

        self.map = self.game.add.tilemap('level1')

        self.map.addTilesetImage('tiles-1')

        self.map.setCollisionByExclusion([13, 14, 15, 16, 46, 47, 48, 49, 50,
                                          51])

        self.layer = self.map.createLayer('Tile Layer 1')
        self.layer.resizeWorld()
        self.game.physics.arcade.gravity.y = 250

        self.player = self.game.add.sprite(32, 32, 'dude')
        self.game.physics.enable(self.player, Physer.Physics.ARCADE)

        self.player.body.bounce.y = 0.2
        self.player.body.collideWorldBounds = True
        self.player.body.setSize(20, 32, 5, 16)

        self.player.animations.add('left', [0, 1, 2, 3], 10, True)
        self.player.animations.add('turn', [4], 20, True)
        self.player.animations.add('right', [5, 6, 7, 8], 10, True)

        self.game.camera.follow(self.player)

        self.cursors = self.game.input.keyboard.createCursorKeys()
        self.jumpButton = self.game.input.keyboard.addKey(Physer.Keyboard.SPACEBAR)

    def update(self):

        self.game.physics.arcade.collide(self.player, self.layer)

        self.player.body.velocity.x = 0

        if self.cursors.left.isDown:
            self.player.body.velocity.x = -150
            if self.facing != 'left':
                self.player.animations.play('left')
                self.facing = 'left'
        elif self.cursors.right.isDown:
            self.player.body.velocity.x = 150
            if self.facing != 'right':
                self.player.animations.play('right')
                self.facing = 'right'
        else:
            if self.facing != 'idle':
                self.player.animations.stop()
                if self.facing == 'left':
                    self.player.frame = 0
                else:
                    self.player.frame = 5
            self.facing = 'idle'

        if self.jumpButton.isDown and \
           self.player.body.onFloor() and \
           self.game.time.now > self.jumpTimer:
            self.player.body.velocity.y = -250
            self.jumpTimer = self.game.time.now + 750

    def render(self):
        # self.game.debug.bodyInfo(self.player, 16, 24)
        pass


def main():
    Physer.log("Starting game")
    game = Physer.Game(800, 600,
                       Physer.CANVAS,
                       'physer-example',
                       None, False, False)
    game.state.add("Example", Example)
    game.state.start("Example")

if __name__ == '__main__':
    Physer.onload(main)
